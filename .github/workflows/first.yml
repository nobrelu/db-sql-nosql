# This is a basic workflow to help you get started with Actions

name: Teste Issue

# Controls when the workflow will run
on:
  issues:
    types:
      - closed

  #workflow_dispatch:

jobs:
  
  issue-automation:
    if:  ${{ contains(github.event.issue.labels.*.name, 'auto')  }}
    
    runs-on: ubuntu-latest
    #env: 
      #algo    
   
    steps:
      - uses: actions/checkout@v3
      - name: print hello
        id: hello
        run: echo "hello adele"
      - name: goodbye
        id: bye
        run: echo "bye adele"    
      - name: teste
        id: teste
        run: |
          echo "First output"
          echo "Second output"
          
      - name: Parse Issue Form
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          issue-body: ${{ github.event.issue.body }}
          template-path: .github/ISSUE_TEMPLATE/teste.yml # optional but recommended

      - name: Print the fields
        run: |
          echo  "teste_contact=$(echo '${{ fromJSON(steps.issue-parser.outputs.jsonString).contact}}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo  "teste_contact=$(echo '${{ fromJSON(steps.issue-parser.outputs.jsonString).contact}}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo  "teste1_contact='${{ fromJSON(steps.issue-parser.outputs.jsonString).contact}}')" >> $GITHUB_ENV
        #env:
          #PARSER_FIELDS: ${{ steps.issue-parser.outputs.jsonString }}
          
      - name: Check params
        id: check-params
        run: |
          echo "CONTATO= ${{ fromJSON(steps.issue-parser.outputs.jsonString).contact }} " >> $GITHUB_OUTPUT
          echo "NOME= ${{ fromJSON(steps.issue-parser.outputs.jsonString).nome }}" >> $GITHUB_OUTPUT
         
        env: 
          CONTACT: ${{ fromJSON(steps.issue-parser.outputs.jsonString).contact }} 
          NAME: ${{ fromJSON(steps.issue-parser.outputs.jsonString).nome }}
          #ISSUE_FORM: ${{ steps.issue-parser.outputs.jsonString }}

      - name: Get Contact
        id: get-contact
        run: 
          echo "CONTATO= ${{ steps.check-params.outputs.CONTATO }}" >> $GITHUB_OUTPUT
        env: 
          CONTACT: ${{ steps.check-params.outputs.CONTATO }}

      - name: Get Name
        id: get-name
        run: 
          echo "NOME= ${{ steps.check-params.outputs.NOME }}" >> $GITHUB_OUTPUT
        env: 
          NAME: ${{ steps.check-params.outputs.NOME }}

      - name: Define Params2
        id: params-defined2
        run: | 
          echo "CONTATO= ${{ steps.get-contact.outputs.CONTATO }}" >> $GITHUB_OUTPUT
          echo "NOME= ${{ steps.get-name.outputs.NOME }}" >> $GITHUB_OUTPUT
        env: 
          CONTACT: ${{ steps.get-contact.outputs.CONTATO}}
          NAME: ${{  steps.get-name.outputs.NOME }}
          #teste: ${{ fromJSON(steps.check-params.outputs.result).nome }}    
          
      - name: Define Params
        id: params-defined
        run: | 
          echo "CONTATO= ${{ steps.check-params.outputs.CONTATO }}" >> $GITHUB_OUTPUT
          echo "NOME= ${{ steps.check-params.outputs.NOME }}" >> $GITHUB_OUTPUT
        env: 
          CONTACT: ${{ steps.check-params.outputs.CONTATO }}
          NAME: ${{ steps.check-params.outputs.NOME }}
          #teste: ${{ fromJSON(steps.check-params.outputs.result).nome }} 






          


